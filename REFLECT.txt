Name: Miguel Garay
NetID: meg89
Hours Spent: 12.0
Consulted With: Carter Kampakis, Mohaimenul Islam
Resources Used: stackexchange.com
Impressions: Really interesting assignment.
%%%%
PROBLEM 1:
Starting tests

Varying order, text length 100, source size 163187
order	#chars	source	mean	sigma
1	100	163187	0.079	0.006
2	100	163187	0.032	0.000
3	100	163187	0.022	0.000
4	100	163187	0.024	0.000
5	100	163187	0.021	0.000
6	100	163187	0.024	0.000
7	100	163187	0.023	0.000
8	100	163187	0.022	0.000
9	100	163187	0.021	0.000
10	100	163187	0.020	0.000
11	100	163187	0.019	0.000
12	100	163187	0.021	0.000
13	100	163187	0.020	0.000
14	100	163187	0.020	0.000
15	100	163187	0.018	0.000

Varying order, text length 200, source size 163187
order	#chars	source	mean	sigma
1	200	163187	0.086	0.000
2	200	163187	0.053	0.000
3	200	163187	0.048	0.000
4	200	163187	0.059	0.000
5	200	163187	0.044	0.000
6	200	163187	0.047	0.000
7	200	163187	0.043	0.000
8	200	163187	0.044	0.000
9	200	163187	0.043	0.000
10	200	163187	0.044	0.000
11	200	163187	0.043	0.000
12	200	163187	0.047	0.000
13	200	163187	0.041	0.000
14	200	163187	0.044	0.000
15	200	163187	0.043	0.000

Varying order, text length 400, source size 163187
order	#chars	source	mean	sigma
1	400	163187	0.166	0.000
2	400	163187	0.101	0.000
3	400	163187	0.089	0.000
4	400	163187	0.105	0.000
5	400	163187	0.090	0.000
6	400	163187	0.091	0.000
7	400	163187	0.088	0.000
8	400	163187	0.097	0.000
9	400	163187	0.094	0.000
10	400	163187	0.088	0.000
11	400	163187	0.086	0.000
12	400	163187	0.091	0.000
13	400	163187	0.087	0.000
14	400	163187	0.087	0.000
15	400	163187	0.087	0.000

Varying order, text length 800, source size 163187
order	#chars	source	mean	sigma
1	800	163187	0.322	0.000
2	800	163187	0.198	0.000
3	800	163187	0.187	0.000
4	800	163187	0.195	0.000
5	800	163187	0.181	0.000
6	800	163187	0.192	0.000
7	800	163187	0.178	0.000
8	800	163187	0.192	0.000
9	800	163187	0.183	0.000
10	800	163187	0.176	0.000
11	800	163187	0.173	0.000
12	800	163187	0.184	0.000
13	800	163187	0.175	0.000
14	800	163187	0.183	0.000
15	800	163187	0.183	0.000

Varying order, text length 1600, source size 163187
order	#chars	source	mean	sigma
1	1600	163187	0.640	0.000
2	1600	163187	0.397	0.000
3	1600	163187	0.387	0.000
4	1600	163187	0.392	0.000
5	1600	163187	0.374	0.000
6	1600	163187	0.375	0.000
7	1600	163187	0.363	0.000
8	1600	163187	0.380	0.000
9	1600	163187	0.365	0.000
10	1600	163187	0.365	0.000
11	1600	163187	0.388	0.002
12	1600	163187	0.369	0.000
13	1600	163187	0.540	0.019
14	1600	163187	0.591	0.008
15	1600	163187	0.380	0.002


Varying text length, and order using file length 163187 (alice.txt)

order	#chars	source	mean	sigma
1	200	163187	0.079	0.000
1	400	163187	0.178	0.000
1	800	163187	0.321	0.000
1	1600	163187	0.635	0.000
5	200	163187	0.044	0.000
5	400	163187	0.088	0.000
5	800	163187	0.182	0.000
5	1600	163187	0.372	0.000
10	200	163187	0.043	0.000
10	400	163187	0.089	0.000
10	800	163187	0.182	0.000
10	1600	163187	0.373	0.000

Varying file length, using k 5 and text length 400

unique	size	name	#chars	mean	sigma

8163	13437	poe.txt	400	0.008	0.000
30449	83749	melville.txt	400	0.047	0.000
42460	156656	romeo.txt	400	0.097	0.000
42016	163189	alice.txt	400	0.092	0.000
76862	507916	hawthorne.txt	400	0.296	0.000
161948	4445127	kjv10.txt	400	2.729	0.290

Finished tests

Starting tests

Varying order, text length 100, source size 507914
order	#chars	source	mean	sigma
1	100	507914	0.162	0.003
2	100	507914	0.087	0.000
3	100	507914	0.072	0.000
4	100	507914	0.069	0.000
5	100	507914	0.073	0.000
6	100	507914	0.069	0.000
7	100	507914	0.072	0.000
8	100	507914	0.061	0.000
9	100	507914	0.064	0.000
10	100	507914	0.072	0.000
11	100	507914	0.068	0.000
12	100	507914	0.064	0.000
13	100	507914	0.071	0.000
14	100	507914	0.053	0.000
15	100	507914	0.065	0.000

Varying order, text length 200, source size 507914
order	#chars	source	mean	sigma
1	200	507914	0.266	0.000
2	200	507914	0.165	0.000
3	200	507914	0.153	0.000
4	200	507914	0.140	0.000
5	200	507914	0.151	0.000
6	200	507914	0.144	0.000
7	200	507914	0.147	0.000
8	200	507914	0.122	0.000
9	200	507914	0.139	0.000
10	200	507914	0.145	0.000
11	200	507914	0.148	0.000
12	200	507914	0.140	0.000
13	200	507914	0.149	0.000
14	200	507914	0.127	0.000
15	200	507914	0.139	0.000

Varying order, text length 400, source size 507914
order	#chars	source	mean	sigma
1	400	507914	0.530	0.000
2	400	507914	0.333	0.000
3	400	507914	0.303	0.000
4	400	507914	0.287	0.000
5	400	507914	0.308	0.000
6	400	507914	0.302	0.000
7	400	507914	0.296	0.000
8	400	507914	0.275	0.000
9	400	507914	0.292	0.000
10	400	507914	0.297	0.000
11	400	507914	0.292	0.000
12	400	507914	0.291	0.000
13	400	507914	0.304	0.000
14	400	507914	0.275	0.000
15	400	507914	0.300	0.000

Varying order, text length 800, source size 507914
order	#chars	source	mean	sigma
1	800	507914	1.056	0.000
2	800	507914	0.665	0.000
3	800	507914	0.601	0.000
4	800	507914	0.560	0.000
5	800	507914	0.619	0.000
6	800	507914	0.604	0.000
7	800	507914	0.611	0.000
8	800	507914	0.579	0.000
9	800	507914	0.604	0.000
10	800	507914	0.614	0.001
11	800	507914	0.578	0.000
12	800	507914	0.584	0.000
13	800	507914	0.585	0.000
14	800	507914	0.579	0.000
15	800	507914	0.599	0.000

Varying order, text length 1600, source size 507914
order	#chars	source	mean	sigma
1	1600	507914	2.084	0.000
2	1600	507914	1.330	0.000
3	1600	507914	1.228	0.000
4	1600	507914	1.152	0.000
5	1600	507914	1.222	0.000
6	1600	507914	1.211	0.000
7	1600	507914	1.237	0.001
8	1600	507914	1.237	0.001
9	1600	507914	1.210	0.000
10	1600	507914	1.214	0.000
11	1600	507914	1.193	0.000
12	1600	507914	1.204	0.006
13	1600	507914	1.199	0.002
14	1600	507914	1.191	0.000
15	1600	507914	1.202	0.000


Varying text length, and order using file length 507914 (hawthorne.txt)

order	#chars	source	mean	sigma
1	200	507914	0.258	0.000
1	400	507914	0.522	0.000
1	800	507914	1.284	0.113
1	1600	507914	3.402	0.699
5	200	507914	0.158	0.000
5	400	507914	0.321	0.000
5	800	507914	0.645	0.000
5	1600	507914	1.279	0.001
10	200	507914	0.151	0.000
10	400	507914	0.302	0.000
10	800	507914	0.672	0.001
10	1600	507914	2.067	0.096

Varying file length, using k 5 and text length 400

unique	size	name	#chars	mean	sigma

8163	13437	poe.txt	400	0.012	0.000
30449	83749	melville.txt	400	0.061	0.000
42460	156656	romeo.txt	400	0.157	0.001
42016	163189	alice.txt	400	0.134	0.000
76862	507916	hawthorne.txt	400	0.501	0.002
161948	4445127	kjv10.txt	400	3.784	0.885

Finished tests


%%%%
PROBLEM 2:
Tripling the size of the text file quadruples the runtime. 
We know this by looking at the means of orders 5 and 10 for each file 
and seeing how long it takes to generate 1600 characters for each.

Increasing the order does not have a significant effect on the runtime.
We know this by looking at orders 2-15 for 1600 characters for hawthorne
and seeing that the runtime is relatively constant.

For a training text of 5.5 million characters, it will take 16.2667 seconds
to generate 16,000 random characters for order-5. I found this by
finding the ratio of the increase in training text and the corresponding
increase in runtime to be 4/3. Then multiply it by 10 because 5.5 million characters
is roughly 10 times the size of hawthorne's size. Then multiply that by
the order-5 runtime for 1600 characters.


PROBLEM 3:
Starting tests

Varying order, text length 100, source size 163187
order	#chars	source	mean	sigma
1	100	163187	0.026	0.001
2	100	163187	0.027	0.000
3	100	163187	0.023	0.000
4	100	163187	0.025	0.000
5	100	163187	0.033	0.000
6	100	163187	0.038	0.000
7	100	163187	0.033	0.000
8	100	163187	0.040	0.000
9	100	163187	0.048	0.000
10	100	163187	0.044	0.000
11	100	163187	0.050	0.000
12	100	163187	0.045	0.000
13	100	163187	0.047	0.000
14	100	163187	0.050	0.000
15	100	163187	0.046	0.000

Varying order, text length 200, source size 163187
order	#chars	source	mean	sigma
1	200	163187	0.011	0.000
2	200	163187	0.013	0.000
3	200	163187	0.018	0.000
4	200	163187	0.024	0.000
5	200	163187	0.031	0.000
6	200	163187	0.033	0.000
7	200	163187	0.033	0.000
8	200	163187	0.041	0.000
9	200	163187	0.044	0.000
10	200	163187	0.043	0.000
11	200	163187	0.047	0.000
12	200	163187	0.072	0.000
13	200	163187	0.047	0.000
14	200	163187	0.046	0.000
15	200	163187	0.046	0.000

Varying order, text length 400, source size 163187
order	#chars	source	mean	sigma
1	400	163187	0.011	0.000
2	400	163187	0.014	0.000
3	400	163187	0.018	0.000
4	400	163187	0.024	0.000
5	400	163187	0.028	0.000
6	400	163187	0.033	0.000
7	400	163187	0.035	0.000
8	400	163187	0.041	0.000
9	400	163187	0.042	0.000
10	400	163187	0.043	0.000
11	400	163187	0.045	0.000
12	400	163187	0.045	0.000
13	400	163187	0.050	0.000
14	400	163187	0.045	0.000
15	400	163187	0.047	0.000

Varying order, text length 800, source size 163187
order	#chars	source	mean	sigma
1	800	163187	0.011	0.000
2	800	163187	0.016	0.000
3	800	163187	0.018	0.000
4	800	163187	0.023	0.000
5	800	163187	0.029	0.000
6	800	163187	0.033	0.000
7	800	163187	0.034	0.000
8	800	163187	0.042	0.000
9	800	163187	0.044	0.000
10	800	163187	0.046	0.000
11	800	163187	0.044	0.000
12	800	163187	0.043	0.000
13	800	163187	0.045	0.000
14	800	163187	0.047	0.000
15	800	163187	0.046	0.000

Varying order, text length 1600, source size 163187
order	#chars	source	mean	sigma
1	1600	163187	0.011	0.000
2	1600	163187	0.013	0.000
3	1600	163187	0.020	0.000
4	1600	163187	0.023	0.000
5	1600	163187	0.029	0.000
6	1600	163187	0.033	0.000
7	1600	163187	0.035	0.000
8	1600	163187	0.043	0.000
9	1600	163187	0.046	0.000
10	1600	163187	0.044	0.000
11	1600	163187	0.045	0.000
12	1600	163187	0.054	0.000
13	1600	163187	0.046	0.000
14	1600	163187	0.048	0.000
15	1600	163187	0.049	0.000


Varying text length, and order using file length 163187 (alice.txt)

order	#chars	source	mean	sigma
1	200	163187	0.010	0.000
1	400	163187	0.011	0.000
1	800	163187	0.011	0.000
1	1600	163187	0.012	0.000
5	200	163187	0.029	0.000
5	400	163187	0.029	0.000
5	800	163187	0.028	0.000
5	1600	163187	0.031	0.000
10	200	163187	0.043	0.000
10	400	163187	0.042	0.000
10	800	163187	0.044	0.000
10	1600	163187	0.044	0.000

Varying file length, using k 5 and text length 400

unique	size	name	#chars	mean	sigma

8163	13437	poe.txt	400	0.002	0.000
30449	83749	melville.txt	400	0.015	0.000
42460	156656	romeo.txt	400	0.026	0.000
42016	163189	alice.txt	400	0.029	0.000
76862	507916	hawthorne.txt	400	0.104	0.000
161948	4445127	kjv10.txt	400	1.712	0.084

Finished tests

Starting tests

Varying order, text length 100, source size 507914
order	#chars	source	mean	sigma
1	100	507914	0.080	0.002
2	100	507914	0.065	0.001
3	100	507914	0.066	0.000
4	100	507914	0.086	0.000
5	100	507914	0.113	0.000
6	100	507914	0.128	0.000
7	100	507914	0.155	0.000
8	100	507914	0.209	0.005
9	100	507914	0.217	0.005
10	100	507914	0.195	0.000
11	100	507914	0.228	0.005
12	100	507914	0.198	0.001
13	100	507914	0.189	0.001
14	100	507914	0.192	0.000
15	100	507914	0.197	0.001

Varying order, text length 200, source size 507914
order	#chars	source	mean	sigma
1	200	507914	0.032	0.000
2	200	507914	0.040	0.000
3	200	507914	0.057	0.000
4	200	507914	0.090	0.000
5	200	507914	0.100	0.000
6	200	507914	0.117	0.000
7	200	507914	0.135	0.000
8	200	507914	0.147	0.000
9	200	507914	0.165	0.001
10	200	507914	0.184	0.000
11	200	507914	0.183	0.000
12	200	507914	0.189	0.000
13	200	507914	0.194	0.000
14	200	507914	0.217	0.001
15	200	507914	0.224	0.008

Varying order, text length 400, source size 507914
order	#chars	source	mean	sigma
1	400	507914	0.035	0.000
2	400	507914	0.039	0.000
3	400	507914	0.059	0.000
4	400	507914	0.081	0.000
5	400	507914	0.106	0.000
6	400	507914	0.119	0.000
7	400	507914	0.135	0.000
8	400	507914	0.143	0.000
9	400	507914	0.151	0.000
10	400	507914	0.187	0.000
11	400	507914	0.325	0.010
12	400	507914	0.214	0.001
13	400	507914	0.199	0.001
14	400	507914	0.230	0.002
15	400	507914	0.257	0.007

Varying order, text length 800, source size 507914
order	#chars	source	mean	sigma
1	800	507914	0.059	0.001
2	800	507914	0.041	0.000
3	800	507914	0.058	0.000
4	800	507914	0.087	0.000
5	800	507914	0.111	0.000
6	800	507914	0.152	0.001
7	800	507914	0.156	0.001
8	800	507914	0.168	0.001
9	800	507914	0.234	0.003
10	800	507914	0.252	0.023
11	800	507914	0.182	0.000
12	800	507914	0.189	0.001
13	800	507914	0.193	0.001
14	800	507914	0.190	0.000
15	800	507914	0.196	0.001

Varying order, text length 1600, source size 507914
order	#chars	source	mean	sigma
1	1600	507914	0.031	0.000
2	1600	507914	0.043	0.000
3	1600	507914	0.058	0.000
4	1600	507914	0.082	0.000
5	1600	507914	0.101	0.000
6	1600	507914	0.116	0.000
7	1600	507914	0.139	0.000
8	1600	507914	0.150	0.000
9	1600	507914	0.153	0.001
10	1600	507914	0.182	0.000
11	1600	507914	0.185	0.000
12	1600	507914	0.201	0.001
13	1600	507914	0.204	0.001
14	1600	507914	0.206	0.001
15	1600	507914	0.207	0.001


Varying text length, and order using file length 507914 (hawthorne.txt)

order	#chars	source	mean	sigma
1	200	507914	0.032	0.000
1	400	507914	0.034	0.000
1	800	507914	0.035	0.000
1	1600	507914	0.034	0.000
5	200	507914	0.111	0.001
5	400	507914	0.104	0.000
5	800	507914	0.101	0.000
5	1600	507914	0.103	0.000
10	200	507914	0.184	0.000
10	400	507914	0.188	0.000
10	800	507914	0.185	0.000
10	1600	507914	0.183	0.000

Varying file length, using k 5 and text length 400

unique	size	name	#chars	mean	sigma

8163	13437	poe.txt	400	0.002	0.000
30449	83749	melville.txt	400	0.015	0.000
42460	156656	romeo.txt	400	0.026	0.000
42016	163189	alice.txt	400	0.028	0.000
76862	507916	hawthorne.txt	400	0.108	0.000
161948	4445127	kjv10.txt	400	1.915	0.187

Finished tests

Tripling the size of the text file quadruples the runtime. 
We know this by looking at the means of orders 5 and 10 for each file 
and seeing how long it takes to generate 1600 characters for each.

Doubling the order doubles the runtime.

For a training text of 5.5 million characters, it will take 1.34667 seconds
to generate 16,000 random characters for order-5. I found this by
finding the ratio of the increase in training text and the corresponding
increase in runtime to be 4/3. Then multiply it by 10 because 5.5 million characters
is roughly 10 times the size of hawthorne's size. Then multiply that by
the order-5 runtime for 1600 characters.

%%%%
PROBLEM 4:
On average, around 250 characters will be generated, on average, if you run this 10 times for an order-5 Markov process. 
I arrived at this result by changing MarkovDriver to run 10 times for a 5 order Markov process 
attempting to generate 5000 characters with many different seeds and averaged the result. 
%%%%
PROBLEM 5:
For hashmaps, the relationship between the file size and the runtime will be relatively linear
because the factor the file size is increased by matches the factor the runtime is increased by.

For treemaps, the relationship between the file size and the runtime will be relatively nonlinear
because the factor the file size is increased by is significantly less than the factor the runtime is increased by.

%%%%
